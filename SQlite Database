import sqlite3


try:
    sqliteConnection = sqlite3.connect('Student.db')
    #sqlite_create_table_query = '''CREATE TABLE Student_Records(
     #                           student_id INTEGER PRIMARY KEY,
      #                          student_name TEXT NOT NULL,
       #                         Course_Code TEXT NOT NULL);'''


    cursor = sqliteConnection.cursor()
    print("Successfully Connected to SQLite")

    #sqlite_select_query = """SELECT * from Student_Records"""

    #sqlite_insert_query = """INSERT INTO `Student_Records`
       #                       ('student_id', 'student_name', 'Course_Code')
        #                       VALUES
        #                      (43256731,'Ronaldo','E345TYR')"""
    #cursor.execute(sqlite_insert_query)
   # sqliteConnection.commit()
    #print("Record inserted successfully into SqliteDb_developers table ", cursor.rowcount)

    sqlite_insert_query = """INSERT INTO Student_Records('student_id', 'student_name', 'Course_Code')
  SELECT RANDOM(), RANDOM(), RANDOM()
   FROM (SELECT * FROM (
         (SELECT 0 UNION ALL SELECT 1) t2 
         )
    ) LIMIT 246;"""
    cursor.execute(sqlite_insert_query)

    print("Record inserted successfully into SqliteDb_developers table ", cursor.rowcount)

    sqlite_select_query = """SELECT * from Student_Records"""
    cursor.execute(sqlite_select_query)

    records = cursor.fetchall()



    print("Total rows are:  ", len(records))
    print("Printing each row")
    for row in records:
        print("Id: ", row[0] , "Name: ",row[1] ,"CC: "+row[2])

    #cursor.execute(sqlite_create_table_query)
    #sqliteConnection.commit()
    #print("SQLite table created")

    cursor.close()

except sqlite3.Error as error:
    print("Error while creating a sqlite table", error)
finally:
    if (sqliteConnection):
        sqliteConnection.close()
        print("sqlite connection is closed")
