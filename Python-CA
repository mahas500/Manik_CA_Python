#!/usr/bin/env python3

import random
import names
import time


def add(students, stud_id, name, cc):
    students[stud_id] = {"student_name": name, "course_code": cc}
    return students


def get_random_digits(n, mode):
    numbers = "1,2,3,4,5,6,7,8,9,0"
    chars = "A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,U,V,W,X,Y,Z"
    symbols = numbers if mode == "numeric" else numbers + chars
    return ''.join([random.choice(symbols.split(',')) for j in range(n)])


def retrieve(student_list):
    if len(student_list) < 2:
        return student_list
    pivot = student_list[0]
    lower = retrieve([x for x in student_list[1:] if x < pivot])
    upper = retrieve([x for x in student_list[1:] if x >= pivot])
    return lower + [pivot] + upper


def main():
    stud = {}
    #start = time.perf_counter()
    for i in range(10):
        stud = add(stud, get_random_digits(8, "numeric"), names.get_full_name(), get_random_digits(7, "alpha-numeric"))
    # for student_id, student in stud.items():
    #    print(student_id, student)
    # print("sorted")
    # for student_id, student in get_sorted(list(stud.items())):
    #    print(student_id, student)

    start = time.perf_counter()


    print(retrieve(list(stud.items()))[0])

    print(retrieve(list(stud.items()))[1:])

   # li=get_sorted(list(stud.items()))[0]
   # print(li[1:])
   # print(li[:1])
    #print(get_sorted(list(stud.items())))
    end = time.perf_counter()
    print(end - start)



if __name__ == '__main__':
    main()

